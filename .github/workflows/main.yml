name: Build and Push Frontend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["Auto-merge feature to main"]
    types:
      - completed
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-push:
    if: github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Debugging information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref: ${{ github.ref }}"
          echo "GitHub Actor: ${{ github.actor }}"
          echo "GitHub SHA: ${{ github.sha }}"
          echo "GitHub Workspace: ${{ github.workspace }}"

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        continue-on-error: true
        
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Get version from project.toml
        id: get_version
        run: |
          if [ -f project.toml ]; then
            version=$(grep -m1 version pyproject.toml | cut -d '"' -f2)
            current_time=$(date +%H.%M)
            tag="${version}.${current_time}"
            echo "Tag: $tag"
            echo "tag=$tag" >> $GITHUB_OUTPUT
          else
            echo "pyproject.toml not found. Using fallback version."
            fallback_tag="fallback-$(date +%Y%m%d%H%M%S)"
            echo "tag=$fallback_tag" >> $GITHUB_OUTPUT
          fi

      - name: Build and push frontend
        run: |
          docker build -f Dockerfile -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ steps.get_version.outputs.tag }} . || exit 1
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ steps.get_version.outputs.tag }} || exit 1

      - name: Print job status
        if: always()
        run: |
          echo "Job status: ${{ job.status }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"

